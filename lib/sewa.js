const fs = require('fs')const toMs = require('ms')const { MessageType } = require("@adiwajshing/baileys");/** * Add Sewa group. * @param {String} gid  * @param {String} expired  * @param {Object} _dir  */const addSewaGroup = (gid, expired, _dir) => {    const obj = { id: gid, expired: Date.now() + toMs(expired), status: true }    _dir.push(obj)    fs.writeFileSync('./database/sewa.json', JSON.stringify(_dir))}/** * Get sewa group position. * @param {String} gid  * @param {Object} _dir  * @returns {Number} */const getSewaPosition = (gid, _dir) => {    let position = null    Object.keys(_dir).forEach((i) => {        if (_dir[i].id === gid) {            position = i        }    })    if (position !== null) {        return position    }}/** * Get sewa group expire. * @param {String} gid  * @param {Object} _dir  * @returns {Number} */const getSewaExpired = (gid, _dir) => {    let position = null    Object.keys(_dir).forEach((i) => {        if (_dir[i].id === gid) {            position = i        }    })    if (position !== null) {        return _dir[position].expired    }}/** * Check group is sewa. * @param {String} userId  * @param {Object} _dir  * @returns {Boolean} */const checkSewaGroup = (gid, _dir) => {    let status = false    Object.keys(_dir).forEach((i) => {        if (_dir[i].id === gid) {            status = true        }    })    return status}/** * Constantly checking sewa. * @param {object} WAConnection * @param {Object} _dir  *//** * Get all premium user ID. * @param {Object} _dir  * @returns {String[]} */const getAllPremiumUser = (_dir) => {    const array = []    Object.keys(_dir).forEach((i) => {        array.push(_dir[i].id)    })    return array}const sleep = async (ms) => {    return new Promise(resolve => setTimeout(resolve, ms));}module.exports = {    addSewaGroup,    getSewaExpired,    getSewaPosition,    checkSewaGroup,    getAllPremiumUser}